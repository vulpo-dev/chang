{
  "db_name": "PostgreSQL",
  "query": "/*\r\n * $1 string - queue\r\n * $2 u16 - limit\r\n*/\r\nwith available_tasks as (\r\n \tselect id, state\r\n \t  from chang.tasks all_tasks\r\n \t where all_tasks.queue = $1\r\n \t   and all_tasks.scheduled_at <= now()\r\n \t   and (all_tasks.state = 'available' or all_tasks.state = 'retryable')\r\n \t   and case\r\n \t         when depends_on is null then true\r\n \t         else not exists (\r\n \t         \tselect *\r\n \t         \t  from chang.tasks\r\n \t         \t where dependend_id = all_tasks.depends_on\r\n \t         \t   and ( \r\n \t         \t   \t     state = 'running'\r\n \t         \t      or state = 'scheduled'\r\n \t         \t      or state = 'available'\r\n \t         \t      or state = 'retryable'\r\n \t         \t   )\r\n \t         )\r\n \t       end\r\n \t order by priority desc\r\n \t        , scheduled_at asc\r\n            , id asc\r\n \t limit $2\r\n \t for update skip locked\r\n), insert_history as (\r\n\tinsert into chang.task_history(task_id, from_state, to_state)\r\n\tselect id as task_id\r\n\t     , available_tasks.state as from_state \r\n\t     , 'running' as to_state\r\n\t  from available_tasks\r\n\treturning task_id as id\r\n)\r\nupdate chang.tasks\r\n   set state = 'running'\r\n     , attempt = attempt + 1\r\n where chang.tasks.id in (select * from insert_history)\r\n returning id\r\n         , state as \"state: TaskState\"\r\n         , attempt\r\n         , scheduled_at\r\n         , max_attempts\r\n         , attempted_by\r\n         , tags\r\n         , kind\r\n         , args\r\n         , priority\r\n         , queue\r\n         , depends_on\r\n         , dependend_id",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "state: TaskState",
        "type_info": {
          "Custom": {
            "name": "tasks_state",
            "kind": {
              "Enum": [
                "available",
                "cancelled",
                "completed",
                "discarded",
                "retryable",
                "running",
                "scheduled"
              ]
            }
          }
        }
      },
      {
        "ordinal": 2,
        "name": "attempt",
        "type_info": "Int2"
      },
      {
        "ordinal": 3,
        "name": "scheduled_at",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 4,
        "name": "max_attempts",
        "type_info": "Int2"
      },
      {
        "ordinal": 5,
        "name": "attempted_by",
        "type_info": "TextArray"
      },
      {
        "ordinal": 6,
        "name": "tags",
        "type_info": "VarcharArray"
      },
      {
        "ordinal": 7,
        "name": "kind",
        "type_info": "Text"
      },
      {
        "ordinal": 8,
        "name": "args",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 9,
        "name": "priority",
        "type_info": "Int2"
      },
      {
        "ordinal": 10,
        "name": "queue",
        "type_info": "Text"
      },
      {
        "ordinal": 11,
        "name": "depends_on",
        "type_info": "Uuid"
      },
      {
        "ordinal": 12,
        "name": "dependend_id",
        "type_info": "Uuid"
      }
    ],
    "parameters": {
      "Left": [
        "Text",
        "Int8"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      true,
      false,
      false,
      true,
      true
    ]
  },
  "hash": "138478e8a508379e1c356dfba13761ee675b74e1a726126eb7c7fd6d829d4a8f"
}
